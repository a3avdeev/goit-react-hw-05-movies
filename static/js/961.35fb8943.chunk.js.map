{"version":3,"file":"static/js/961.35fb8943.chunk.js","mappings":"yRAMe,SAASA,IAAgB,IAAD,IAC3BC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MAkBjB,IAhBAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAQ,mCAAG,2FACbJ,EAAS,MACTF,EAAS,MAFI,mBAKMO,EAAAA,EAAAA,IAAaX,GALnB,OAKPY,EALO,OAMbR,EAASQ,GANI,gDASbN,EAAS,EAAD,IATK,yDAAH,qDAYdI,GACH,GAAE,CAACV,KAECG,EAAO,OAAO,KAEnB,IAAMU,EAAU,oBAAGN,EAASJ,aAAZ,aAAG,EAAgBW,YAAnB,QAA2B,UAE3C,OACI,gCACKT,IAAS,wDACV,UAAC,KAAD,CAASU,GAAIF,EAAb,WAAyB,SAAC,MAAD,IAAzB,eACA,4BACI,gBAAKG,IAAG,yCAAoCb,EAAMc,aAAeC,IAAI,MACrE,4BACI,wBAAKf,EAAMgB,SACX,yCAAsC,GAArBhB,EAAMiB,cAAmBC,QAAQ,GAAlD,QACA,sCACA,uBAAIlB,EAAMmB,YACV,oCACA,uBAAInB,EAAMoB,OAAOC,KAAI,gBAAGC,EAAH,EAAGA,KAAH,gBAAiBA,EAAjB,IAAyBC,KAAK,eAG3D,4BACI,oDACA,2BACI,yBACI,SAAC,KAAD,CAAMX,GAAG,OAAOZ,MAAO,CAAEW,KAAMD,GAA/B,qBAEJ,yBACI,SAAC,KAAD,CAAME,GAAG,UAAUZ,MAAO,CAAEW,KAAMD,GAAlC,8BAIZ,SAAC,EAAAc,SAAD,CAAUC,UAAU,SAAC,IAAD,IAApB,UACI,SAAC,KAAD,QAIf,C,8LC7DKC,EAAW,gCACXC,EAAU,mCAEHC,EAAa,mCAAG,6GAEFC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,oCACkBC,IAHhB,cAEnBG,EAFmB,yBAMlBA,EAASrB,KAAKsB,SANI,gCAQzBC,QAAQC,IAAI,KAAMC,SAClBC,MAAM,UAAD,OAAW,KAAMD,QAAjB,+BAToB,yDAAH,qDAabE,EAAW,mCAAG,WAAOC,GAAP,gGAEAR,EAAAA,EAAAA,IAAA,UAClBH,EADkB,gCACcC,EADd,kBAC+BU,IAH/B,cAEjBP,EAFiB,yBAMhBA,EAASrB,KAAKsB,SANE,gCAQvBC,QAAQC,IAAI,KAAMC,SAClBC,MAAM,UAAD,OAAW,KAAMD,QAAjB,+BATkB,yDAAH,sDAaX1B,EAAY,mCAAG,WAAO8B,GAAP,gGAEDT,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDY,EADC,oBACaX,IAHZ,cAElBG,EAFkB,yBAMjBA,EAASrB,MANQ,gCAQxBuB,QAAQC,IAAI,KAAMC,SAClBC,MAAM,UAAD,OAAW,KAAMD,QAAjB,+BATmB,yDAAH,sDAaZK,EAAY,mCAAG,WAAOD,GAAP,gGAEDT,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDY,EADC,4BACqBX,IAHpB,cAElBG,EAFkB,yBAMjBA,EAASrB,KAAK+B,MANG,gCAQxBR,QAAQC,IAAI,KAAMC,SAClBC,MAAM,UAAD,OAAW,KAAMD,QAAjB,+BATmB,yDAAH,sDAaZO,EAAY,mCAAG,WAAOH,GAAP,gGAEDT,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDY,EADC,4BACqBX,IAHpB,cAElBG,EAFkB,yBAMjBA,EAASrB,KAAKsB,SANG,gCAQxBC,QAAQC,IAAI,KAAMC,SAClBC,MAAM,UAAD,OAAW,KAAMD,QAAjB,+BATmB,yDAAH,qD","sources":["pages/MovieDetails/MovieDetails.jsx","services/fetchFilms.jsx"],"sourcesContent":["import { Link, NavLink, Outlet, useParams, useLocation } from \"react-router-dom\";\nimport React, { useState, useEffect, Suspense } from 'react';\nimport { fetchDetails } from '../../services/fetchFilms';\nimport { IoArrowBackSharp } from 'react-icons/io5';\nimport { Loader } from '../../components/Loader/Loader';\n\nexport default function MovieDetails() {\n    const { movieId } = useParams();\n    const [state, setState] = useState(null);\n    const [error, setError] = useState(null);\n    const location = useLocation();\n\n    useEffect(() => {\n        const getMovie = async () => {\n            setError(null)\n            setState(null)\n\n        try {\n            const data = await fetchDetails(movieId)\n            setState(data)\n\n        } catch (error) {\n            setError(error)\n        }\n    }\n        getMovie();\n    }, [movieId])\n\n    if (!state) return null\n\n    const goBackLink = location.state?.from ?? '/movies';\n\n    return (\n        <>\n            {error && <p>Sorry, something went wrong</p>}\n            <NavLink to={goBackLink}><IoArrowBackSharp /> Go Back</NavLink>\n            <div>\n                <img src={`https://image.tmdb.org/t/p/w500${state.poster_path}`} alt=\"\" />\n                <div>\n                    <h1>{state.title}</h1>\n                    <p>User score: {(state.vote_average * 10).toFixed(0)}%</p>\n                    <h2>Overwiew</h2>\n                    <p>{state.overview}</p>\n                    <h3>Genres</h3>\n                    <p>{state.genres.map(({ name }) => `${name}`).join(', ')}</p>\n                </div>\n            </div>\n            <div>\n                <h4>Additional information</h4>\n                <ul>\n                    <li>\n                        <Link to=\"cast\" state={{ from: goBackLink }}>Cast</Link>\n                    </li>\n                    <li>\n                        <Link to=\"reviews\" state={{ from: goBackLink }}>Reviews</Link>\n                    </li>\n                </ul>\n            </div>\n            <Suspense fallback={<Loader />}>\n                <Outlet />\n            </Suspense>\n        </>\n    );\n};","import axios from \"axios\";\n\nconst BASE_URL = \"https://api.themoviedb.org/3/\"\nconst API_KEY = \"9827f40b343f4f4b022b63e7687192bf\"\n\nexport const fetchTrending = async () => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}trending/all/day?api_key=${API_KEY}`\n    );\n    // console.log(response.data);\n    return response.data.results;\n  } catch (error) {\n    console.log(error.message);\n    alert(`Sorry. ${error.message}. Please try another movie`);\n  }\n};\n\nexport const fetchSearch = async (query) => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}`\n    );\n    // console.log(response.data);\n    return response.data.results;\n  } catch (error) {\n    console.log(error.message);\n    alert(`Sorry. ${error.message}. Please try another movie`);\n  }\n};\n\nexport const fetchDetails = async (id) => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${id}?api_key=${API_KEY}`\n    );\n    // console.log(response.data);\n    return response.data;\n  } catch (error) {\n    console.log(error.message);\n    alert(`Sorry. ${error.message}. Please try another movie`);\n  }\n};\n\nexport const fetchCredits = async (id) => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}`\n    );\n    // console.log(response.data);\n    return response.data.cast;\n  } catch (error) {\n    console.log(error.message);\n    alert(`Sorry. ${error.message}. Please try another movie`);\n  }\n};\n\nexport const fetchReviews = async (id) => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}`\n    );\n    // console.log(response.data);\n    return response.data.results;\n  } catch (error) {\n    console.log(error.message);\n    alert(`Sorry. ${error.message}. Please try another movie`);\n  }\n};"],"names":["MovieDetails","movieId","useParams","useState","state","setState","error","setError","location","useLocation","useEffect","getMovie","fetchDetails","data","goBackLink","from","to","src","poster_path","alt","title","vote_average","toFixed","overview","genres","map","name","join","Suspense","fallback","BASE_URL","API_KEY","fetchTrending","axios","response","results","console","log","message","alert","fetchSearch","query","id","fetchCredits","cast","fetchReviews"],"sourceRoot":""}