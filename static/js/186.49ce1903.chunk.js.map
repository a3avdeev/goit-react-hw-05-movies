{"version":3,"file":"static/js/186.49ce1903.chunk.js","mappings":"+PAIe,SAASA,IACpB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,MAEAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAQ,mCAAG,2FACbF,EAAS,MACTF,EAAW,MAFE,mBAKUK,EAAAA,EAAAA,IAAaT,GALvB,OAKHU,EALG,OAOTN,EAAWM,GAPF,gDAUTJ,EAAS,EAAD,IAVC,yDAAH,qDAadE,GACH,GAAE,CAACR,IAEJ,IAAMW,EAA8B,KAAb,OAAPR,QAAO,IAAPA,OAAA,EAAAA,EAASS,SAAgBP,EAEzC,OACI,0BACKM,IAAW,oEADhB,OAEKR,QAFL,IAEKA,OAFL,EAEKA,EAASU,KAAI,gBAAEC,EAAF,EAAEA,GAAIC,EAAN,EAAMA,OAAQC,EAAd,EAAcA,QAAd,OAA2B,2BACzC,qCAAW,uBAAID,QACf,uBAAIC,MAF8CF,EAApC,MAOzB,C,8LCpCKG,EAAW,gCACXC,EAAU,mCAEHC,EAAa,mCAAG,6GAEFC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,oCACkBC,IAHhB,cAEnBG,EAFmB,yBAMlBA,EAASX,KAAKY,SANI,gCAQzBC,QAAQC,IAAI,KAAMC,SAClBC,MAAM,UAAD,OAAW,KAAMD,QAAjB,+BAToB,yDAAH,qDAabE,EAAW,mCAAG,WAAOC,GAAP,gGAEAR,EAAAA,EAAAA,IAAA,UAClBH,EADkB,gCACcC,EADd,kBAC+BU,IAH/B,cAEjBP,EAFiB,yBAMhBA,EAASX,KAAKY,SANE,gCAQvBC,QAAQC,IAAI,KAAMC,SAClBC,MAAM,UAAD,OAAW,KAAMD,QAAjB,+BATkB,yDAAH,sDAaXI,EAAY,mCAAG,WAAOf,GAAP,gGAEDM,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDH,EADC,oBACaI,IAHZ,cAElBG,EAFkB,yBAMjBA,EAASX,MANQ,gCAQxBa,QAAQC,IAAR,MACAE,MAAM,UAAD,OAAW,KAAML,SAASX,KAAKoB,eAA/B,wCACLC,OAAOC,SAASC,QAAQ,KAVA,yDAAH,sDAcZC,EAAY,mCAAG,WAAOpB,GAAP,gGAEDM,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDH,EADC,4BACqBI,IAHpB,cAElBG,EAFkB,yBAMjBA,EAASX,KAAKyB,MANG,gCAQxBZ,QAAQC,IAAI,KAAMC,SAClBC,MAAM,UAAD,OAAW,KAAMD,QAAjB,gCATmB,yDAAH,sDAaZhB,EAAY,mCAAG,WAAOK,GAAP,gGAEDM,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDH,EADC,4BACqBI,IAHpB,cAElBG,EAFkB,yBAMjBA,EAASX,KAAKY,SANG,gCAQxBC,QAAQC,IAAI,KAAMC,SAClBC,MAAM,UAAD,OAAW,KAAMD,QAAjB,gCATmB,yDAAH,qD","sources":["components/Reviews/Reviews.jsx","services/fetchFilms.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchReviews } from '../../services/fetchFilms';\n\nexport default function Reviews() {\n    const { movieId } = useParams();\n    const [reviews, setReviews] = useState([]);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        const getMovie = async () => {\n            setError(null)\n            setReviews(null)\n\n            try {\n                const data = await fetchReviews(movieId)\n\n                setReviews(data)\n\n            } catch (error) {\n                setError(error)\n            }\n        }\n        getMovie();\n    }, [movieId]);\n\n    const isMovie = reviews?.length === 0 || error;\n\n    return (\n        <ol>\n            {isMovie && <p>We don't have any reviews for this movie</p>}\n            {reviews?.map(({id, author, content}) => <li key={id}>\n            <p>Author: <b>{author}</b></p>\n            <p>{content}</p>\n            </li>\n        )}\n        </ol>\n    )\n}","import axios from \"axios\";\n\nconst BASE_URL = \"https://api.themoviedb.org/3/\";\nconst API_KEY = \"9827f40b343f4f4b022b63e7687192bf\";\n\nexport const fetchTrending = async () => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}trending/all/day?api_key=${API_KEY}`\n    );\n    // console.log(response.data);\n    return response.data.results;\n  } catch (error) {\n    console.log(error.message);\n    alert(`Sorry. ${error.message}. Please try another movie`);\n  }\n};\n\nexport const fetchSearch = async (query) => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}`\n    );\n    // console.log(response.data);\n    return response.data.results;\n  } catch (error) {\n    console.log(error.message);\n    alert(`Sorry. ${error.message}. Please try another movie`);\n  }\n};\n\nexport const fetchDetails = async (id) => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${id}?api_key=${API_KEY}`\n    );\n    // console.log(response.data);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n    alert(`Sorry. ${error.response.data.status_message} Please try to search another movie`);\n    window.location.replace(\"/\")\n  }\n};\n\nexport const fetchCredits = async (id) => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}`\n    );\n    // console.log(response.data);\n    return response.data.cast;\n  } catch (error) {\n    console.log(error.message);\n    alert(`Sorry. ${error.message}. Please try something else`);\n  }\n};\n\nexport const fetchReviews = async (id) => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}`\n    );\n    // console.log(response.data);\n    return response.data.results;\n  } catch (error) {\n    console.log(error.message);\n    alert(`Sorry. ${error.message}. Please try something else`);\n  }\n};\n"],"names":["Reviews","movieId","useParams","useState","reviews","setReviews","error","setError","useEffect","getMovie","fetchReviews","data","isMovie","length","map","id","author","content","BASE_URL","API_KEY","fetchTrending","axios","response","results","console","log","message","alert","fetchSearch","query","fetchDetails","status_message","window","location","replace","fetchCredits","cast"],"sourceRoot":""}