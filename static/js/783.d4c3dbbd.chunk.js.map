{"version":3,"file":"static/js/783.d4c3dbbd.chunk.js","mappings":"qMAGaA,EAAY,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAClBC,GAAWC,EAAAA,EAAAA,MAEjB,cAAQF,QAAR,IAAQA,OAAR,EAAQA,EAAOG,KAAI,gBAAEC,EAAF,EAAEA,GAAIC,EAAN,EAAMA,MAAOC,EAAb,EAAaA,KAAb,OAAuB,yBACtB,SAAC,KAAD,CAASC,GAAE,kBAAaH,GAAMI,MAAO,CAACC,KAAMR,GAA5C,SAAwDI,GAASC,KADlCF,EAAhC,GAKtB,C,mKCTYM,E,OAAcC,GAAAA,IAAH,kN,SCIT,SAASC,IAEpB,OAA8BC,EAAAA,EAAAA,WAAS,GAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOb,EAAP,KAAcgB,EAAd,KACA,GAA0BH,EAAAA,EAAAA,UAAS,MAAnC,eAAOI,EAAP,KAAcC,EAAd,MAEAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAW,mCAAG,2FAChBL,GAAW,GADK,mBAGOM,EAAAA,EAAAA,MAHP,OAGNC,EAHM,OAKZN,GAAS,OAAIM,IALD,gDAQZJ,EAAS,EAAD,IARI,yBAUZH,GAAW,GAVC,4EAAH,qDAajBK,GACH,GAAE,IAEH,IAAMG,EAA4B,IAAjBvB,EAAMwB,OAEvB,OACQ,UAACd,EAAD,YACI,2CACCI,IAAW,SAACW,EAAA,EAAD,IACXR,IAAS,yDACTM,IAAY,yBAAI,SAACxB,EAAA,EAAD,CAAWC,MAAOA,QAGlD,C,8LCrCK0B,EAAW,gCACXC,EAAU,mCAEHN,EAAa,mCAAG,6GAEFO,EAAAA,EAAAA,IAAA,UAClBF,EADkB,oCACkBC,IAHhB,cAEnBE,EAFmB,yBAMlBA,EAASP,KAAKQ,SANI,gCAQzBC,QAAQC,IAAI,KAAMC,SAClBC,MAAM,UAAD,OAAW,KAAMD,QAAjB,+BAToB,yDAAH,qDAabE,EAAW,mCAAG,WAAOC,GAAP,gGAEAR,EAAAA,EAAAA,IAAA,UAClBF,EADkB,gCACcC,EADd,kBAC+BS,IAH/B,cAEjBP,EAFiB,yBAMhBA,EAASP,KAAKQ,SANE,gCAQvBC,QAAQC,IAAI,KAAMC,SAClBC,MAAM,UAAD,OAAW,KAAMD,QAAjB,+BATkB,yDAAH,sDAaXI,EAAY,mCAAG,WAAOjC,GAAP,gGAEDwB,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iBACDtB,EADC,oBACauB,IAHZ,cAElBE,EAFkB,yBAMjBA,EAASP,MANQ,gCAQxBS,QAAQC,IAAI,KAAMC,SAClBC,MAAM,UAAD,OAAW,KAAMD,QAAjB,+BATmB,yDAAH,sDAaZK,EAAY,mCAAG,WAAOlC,GAAP,gGAEDwB,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iBACDtB,EADC,4BACqBuB,IAHpB,cAElBE,EAFkB,yBAMjBA,EAASP,KAAKiB,MANG,gCAQxBR,QAAQC,IAAI,KAAMC,SAClBC,MAAM,UAAD,OAAW,KAAMD,QAAjB,+BATmB,yDAAH,sDAaZO,EAAY,mCAAG,WAAOpC,GAAP,gGAEDwB,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iBACDtB,EADC,4BACqBuB,IAHpB,cAElBE,EAFkB,yBAMjBA,EAASP,KAAKQ,SANG,gCAQxBC,QAAQC,IAAI,KAAMC,SAClBC,MAAM,UAAD,OAAW,KAAMD,QAAjB,+BATmB,yDAAH,qD","sources":["components/MovieList/MovieList.jsx","pages/Home/Home.Styled.js","pages/Home/Home.jsx","services/fetchFilms.jsx"],"sourcesContent":["import { NavLink, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport const MovieList = ({ items }) => {\n    const location = useLocation();\n\n    return (items?.map(({id, title, name}) => <li key={id}>\n                        <NavLink to={`/movies/${id}`} state={{from: location}}>{title || name}</NavLink>\n                    </li>\n                ));\n    \n};\n\nMovieList.propTypes = {\n    items: PropTypes.arrayOf(PropTypes.shape(\n        {\n            id: PropTypes.number.isRequired,\n            title: PropTypes.string,\n            name: PropTypes.string,\n        }\n    )),\n}\n\n","import styled from 'styled-components';\n\nexport const HomeWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 24px;\n\n  & h1 {\n    margin: 0;\n  }\n\n  & ul {\n    padding-left: 20px;\n\n    & li {\n      margin-bottom: 4px;\n    }\n  }\n`;\n","import { fetchTrending } from '../../services/fetchFilms';\nimport React, { useState, useEffect } from 'react';\nimport { MovieList } from 'components/MovieList/MovieList';\nimport { Loader } from 'components/Loader/Loader';\nimport { HomeWrapper } from './Home.Styled';\n\nexport default function Home() {\n\n    const [loading, setLoading] = useState(false);\n    const [items, setItems] = useState([]);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        const fetchMovies = async () => {\n            setLoading(true);\n            try {\n                const data = await fetchTrending()\n\n                setItems([...data])\n\n            } catch (error) {\n                setError(error)\n            } finally {\n                setLoading(false);\n            }\n        }\n        fetchMovies();\n    }, []);\n\n    const isMovies = items.length !== 0;\n\n    return (\n            <HomeWrapper>\n                <h1>Trending today</h1>\n                {loading && <Loader />}\n                {error && <p>Sorry. Please try again later</p>}\n                {isMovies && <ul><MovieList items={items} /></ul>}\n            </HomeWrapper>\n    );\n};\n","import axios from \"axios\";\n\nconst BASE_URL = \"https://api.themoviedb.org/3/\"\nconst API_KEY = \"9827f40b343f4f4b022b63e7687192bf\"\n\nexport const fetchTrending = async () => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}trending/all/day?api_key=${API_KEY}`\n    );\n    // console.log(response.data);\n    return response.data.results;\n  } catch (error) {\n    console.log(error.message);\n    alert(`Sorry. ${error.message}. Please try another movie`);\n  }\n};\n\nexport const fetchSearch = async (query) => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}`\n    );\n    // console.log(response.data);\n    return response.data.results;\n  } catch (error) {\n    console.log(error.message);\n    alert(`Sorry. ${error.message}. Please try another movie`);\n  }\n};\n\nexport const fetchDetails = async (id) => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${id}?api_key=${API_KEY}`\n    );\n    // console.log(response.data);\n    return response.data;\n  } catch (error) {\n    console.log(error.message);\n    alert(`Sorry. ${error.message}. Please try another movie`);\n  }\n};\n\nexport const fetchCredits = async (id) => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}`\n    );\n    // console.log(response.data);\n    return response.data.cast;\n  } catch (error) {\n    console.log(error.message);\n    alert(`Sorry. ${error.message}. Please try another movie`);\n  }\n};\n\nexport const fetchReviews = async (id) => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}`\n    );\n    // console.log(response.data);\n    return response.data.results;\n  } catch (error) {\n    console.log(error.message);\n    alert(`Sorry. ${error.message}. Please try another movie`);\n  }\n};"],"names":["MovieList","items","location","useLocation","map","id","title","name","to","state","from","HomeWrapper","styled","Home","useState","loading","setLoading","setItems","error","setError","useEffect","fetchMovies","fetchTrending","data","isMovies","length","Loader","BASE_URL","API_KEY","axios","response","results","console","log","message","alert","fetchSearch","query","fetchDetails","fetchCredits","cast","fetchReviews"],"sourceRoot":""}