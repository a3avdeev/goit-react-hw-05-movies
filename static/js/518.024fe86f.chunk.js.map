{"version":3,"file":"static/js/518.024fe86f.chunk.js","mappings":"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","sources":["pages/MovieDetails/MovieDetails.Styled.js","pages/MovieDetails/MovieDetails.jsx","services/fetchFilms.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const BackLink = styled(NavLink)`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin: 10px 24px;\n  text-decoration: none;\n  max-width: 100px;\n\n  & svg {\n    margin-right: 4px;\n    width: 1.3em;\n    height: 1.3em;\n  }\n`;\n\nexport const MovieWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  padding-left: 24px;\n\n  & img {\n    max-width: 300px;\n    height: auto;\n  }\n\n  & div {\n    display: flex;\n    flex-direction: column;\n    margin-left: 20px;\n\n    & h1,\n    h2,\n    h3,\n    p {\n      margin-top: 0;\n      margin-bottom: 14px;\n    }\n  }\n`;\n\nexport const AdditionalWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 10px;\n  padding-left: 24px;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n\n  & h4 {\n    margin-top: 10px;\n    margin-bottom: 4px;\n  }\n\n  & ul {\n    margin-top: 6px;\n    margin-bottom: 10px;\n    padding-left: 20px;\n\n    & li {\n      margin-bottom: 4px;\n    }\n  }\n`;\n","import { Link, Outlet, useParams, useLocation } from \"react-router-dom\";\nimport React, { useState, useEffect, Suspense } from 'react';\nimport { fetchDetails } from '../../services/fetchFilms';\nimport { IoArrowBackSharp } from 'react-icons/io5';\nimport { Loader } from '../../components/Loader/Loader';\nimport { MovieWrapper, BackLink, AdditionalWrapper } from './MovieDetails.Styled';\n\nexport default function MovieDetails() {\n    const { movieId } = useParams();\n    const [state, setState] = useState(null);\n    const [error, setError] = useState(null);\n    const location = useLocation();\n\n    useEffect(() => {\n        const getMovie = async () => {\n            setError(null)\n            setState(null)\n\n        try {\n            const data = await fetchDetails(movieId)\n            setState(data)\n\n        } catch (error) {\n            setError(error)\n        }\n    }\n        getMovie();\n    }, [movieId])\n\n    if (!state) return null\n\n    const goBackLink = location.state?.from ?? '/movies';\n\n    return (\n        <>\n            {error && <p>Sorry, something went wrong</p>}\n            <BackLink to={goBackLink}><IoArrowBackSharp /> Go Back</BackLink>\n            <MovieWrapper>\n                <img src={state.poster_path === null ? 'https://us.123rf.com/450wm/urfandadashov/urfandadashov1805/urfandadashov180500070/100957966-photo-not-available-icon-isolated-on-white-background-vector-illustration.jpg?ver=6' : `https://image.tmdb.org/t/p/w500${state.poster_path}`} alt=\"\" />\n                <div>\n                    <h1>{state.title}</h1>\n                    <p>User score: {(state.vote_average * 10).toFixed(0)}%</p>\n                    <h2>Overwiew</h2>\n                    <p>{state.overview}</p>\n                    <h3>Genres</h3>\n                    <p>{state.genres.map(({ name }) => `${name}`).join(', ')}</p>\n                </div>\n            </MovieWrapper>\n            <AdditionalWrapper>\n                <h4>Additional information</h4>\n                <ul>\n                    <li>\n                        <Link to=\"cast\" state={{ from: goBackLink }}>Cast</Link>\n                    </li>\n                    <li>\n                        <Link to=\"reviews\" state={{ from: goBackLink }}>Reviews</Link>\n                    </li>\n                </ul>\n            </AdditionalWrapper>\n            <Suspense fallback={<Loader />}>\n                <Outlet />\n            </Suspense>\n        </>\n    );\n};","import axios from \"axios\";\n\nconst BASE_URL = \"https://api.themoviedb.org/3/\";\nconst API_KEY = \"9827f40b343f4f4b022b63e7687192bf\";\n\nexport const fetchTrending = async () => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}trending/all/day?api_key=${API_KEY}`\n    );\n    // console.log(response.data);\n    return response.data.results;\n  } catch (error) {\n    console.log(error.message);\n    alert(`Sorry. ${error.message}. Please try another movie`);\n  }\n};\n\nexport const fetchSearch = async (query) => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}`\n    );\n    // console.log(response.data);\n    return response.data.results;\n  } catch (error) {\n    console.log(error.message);\n    alert(`Sorry. ${error.message}. Please try another movie`);\n  }\n};\n\nexport const fetchDetails = async (id) => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${id}?api_key=${API_KEY}`\n    );\n    // console.log(response.data);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n    alert(`Sorry. ${error.response.data.status_message} Please try to search another movie`);\n    window.location.replace(\"/\")\n  }\n};\n\nexport const fetchCredits = async (id) => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}`\n    );\n    // console.log(response.data);\n    return response.data.cast;\n  } catch (error) {\n    console.log(error.message);\n    alert(`Sorry. ${error.message}. Please try something else`);\n  }\n};\n\nexport const fetchReviews = async (id) => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}`\n    );\n    // console.log(response.data);\n    return response.data.results;\n  } catch (error) {\n    console.log(error.message);\n    alert(`Sorry. ${error.message}. Please try something else`);\n  }\n};\n"],"names":["BackLink","styled","NavLink","MovieWrapper","AdditionalWrapper","MovieDetails","movieId","useParams","useState","state","setState","error","setError","location","useLocation","useEffect","getMovie","fetchDetails","data","goBackLink","from","to","src","poster_path","alt","title","vote_average","toFixed","overview","genres","map","name","join","Suspense","fallback","Loader","BASE_URL","API_KEY","fetchTrending","axios","response","results","console","log","message","alert","fetchSearch","query","id","status_message","window","replace","fetchCredits","cast","fetchReviews"],"sourceRoot":""}